
int frequency_in_multiplication_table(int val){
	int cnt = 0;
	for(int i = 1; i <= n; i++){
		cnt += min(n, val/i);
	}
	return cnt;
}

### Purpose:
The function calculates the **number of elements** in an (n * n) multiplication table that are **less than or equal to (val)**.

---

### Multiplication Table Overview:
- The table is defined as (A[i][j] = i * j), where (1 leq i, j leq n).
- For example, for (n = 4), the table looks like this:

| (i \ j)             | 1  | 2  | 3  | 4  |
|---------------------|----|----|----|----|
|   1                 | 1  | 2  | 3  | 4  |
|   2                 | 2  | 4  | 6  | 8  |
|   3                 | 3  | 6  | 9  | 12 |
|   4                 | 4  | 8  | 12 | 16 |

---

### Explanation of the Code:
1. **Outer Loop:**
   - The loop runs from (i = 1) to (i = n), iterating through each row of the table.

2. **Key Observation:**
   - In row i, the numbers are (i, 2i, 3i, \dots, ni).
   - The count of numbers "val" in this row is:
     ```
     floor(val / i)
     ```
   - Example: For (i = 3) and (val = 10), the numbers in the row are (3, 6, 9, 12). Only (3, 6, 9) ((3) numbers) are (leq 10).

3. **Expression Inside the Loop:**
   - `min(n, val / i)` ensures we do not count more than \(n\) elements from any row (since there are \(n\) columns).

4. **Summing Up:**
   - The variable `cnt` accumulates the count of all numbers \( \leq val \) across all rows.

---

### Example Walkthrough:
Given \(n = 4\) and \(val = 6\):

1. The multiplication table is:
| \(i \backslash j\) | 1  | 2  | 3  | 4  |
|---------------------|----|----|----|----|
| **1**               | 1  | 2  | 3  | 4  |
| **2**               | 2  | 4  | 6  | 8  |
| **3**               | 3  | 6  | 9  | 12 |
| **4**               | 4  | 8  | 12 | 16 |

2. Calculation for each row:
   - For \(i = 1\): \( \text{min}(4, \lfloor 6 / 1 \rfloor) = 4\).
   - For \(i = 2\): \( \text{min}(4, \lfloor 6 / 2 \rfloor) = 3\).
   - For \(i = 3\): \( \text{min}(4, \lfloor 6 / 3 \rfloor) = 2\).
   - For \(i = 4\): \( \text{min}(4, \lfloor 6 / 4 \rfloor) = 1\).

3. Total Count: \(4 + 3 + 2 + 1 = 10\).

Thus, there are \(10\) numbers \( \leq 6\) in the \(4 \times 4\) multiplication table.

---

### Use Case:
This function is commonly used in **binary search problems** to determine if a given value \(val\) satisfies a condition. For example, finding the \(k\)-th smallest number in a multiplication table.
